name: fetch-sp2kp
on:
  workflow_dispatch:
    inputs:
      days_back:
        description: 'Ambil berapa hari ke belakang (default 90)'
        required: false

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Siapkan tools & parameter
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq

          DAYS="${{ inputs.days_back || '' }}"
          if [ -z "$DAYS" ]; then DAYS=90; fi   # default 90 hari
          echo "DAYS_BACK=$DAYS" >> $GITHUB_ENV

          START_DATE="$(date -u -d "-$((DAYS-1)) day" +%F)"
          END_DATE="$(date -u +%F)"
          echo "START_DATE=$START_DATE" >> $GITHUB_ENV
          echo "END_DATE=$END_DATE" >> $GITHUB_ENV

      - name: Tarik data (provinsi & kab/kota) untuk 90 hari terakhir
        env:
          DAYS_BACK: ${{ env.DAYS_BACK }}
          START_DATE: ${{ env.START_DATE }}
          END_DATE: ${{ env.END_DATE }}
        run: |
          set -euo pipefail
          ORIGIN='https://sp2kp.kemendag.go.id'
          REFERER='https://sp2kp.kemendag.go.id/'
          mkdir -p tmp out
          : > tmp/all.jsonl

          # Loop tanggal (hari ini mundur sampai START_DATE)
          for i in $(seq 0 $((DAYS_BACK-1))); do
            TANGGAL="$(date -u -d "-$i day" +%F)"
            # Bandingkan ke 30 hari sebelumnya (seperti tampilan web perbandingan bulanan)
            TANGGAL_CMP="$(date -u -d "$TANGGAL -30 day" +%F)"

            # Loop target wilayah dari targets.csv
            tail -n +2 targets.csv | while IFS=, read -r PCODE PNAME RCODE RNAME; do
              PCODE="$(echo "${PCODE:-}" | xargs)"
              PNAME="$(echo "${PNAME:-}" | xargs)"
              RCODE="$(echo "${RCODE:-}" | xargs)"
              RNAME="$(echo "${RNAME:-}" | xargs)"
              [ -z "$PCODE" ] && continue

              if [ -z "$RCODE" ]; then
                # ===== level PROVINSI =====
                RESP="$(curl -sS \
                  -H "Origin: $ORIGIN" -H "Referer: $REFERER" \
                  -F "tanggal=$TANGGAL" \
                  -F "tanggal_pembanding=$TANGGAL_CMP" \
                  -F "kode_provinsi=$PCODE" \
                  'https://api-sp2kp.kemendag.go.id/report/api/average-price/generate-perbandingan-harga' || echo '{}')"

                echo "$RESP" | jq -c --arg pcode "$PCODE" --arg pname "$PNAME" '
                  (.data // [])[] as $d
                  | {
                      level: "province",
                      province_code: $pcode,
                      province_name: $pname,
                      regency_code: null,
                      regency_name: null,
                      tanggal: ($d.tanggal // ""),
                      harga: ($d.harga // 0),
                      tanggal_pembanding: ($d.tanggal_pembanding // ""),
                      harga_pembanding: ($d.harga_pembanding // 0),
                      delta_harga: ($d.delta_harga // ( ($d.harga // 0) - ($d.harga_pembanding // 0) )),
                      persen_perubahan: ($d.persen_perubahan // 0),
                      status_perubahan: ($d.status_perubahan // ""),
                      variant_id: $d.variant_id,
                      variant_nama: $d.variant_nama,
                      satuan_display: $d.satuan_display
                    }' >> tmp/all.jsonl
              else
                # ===== level KAB/KOTA =====
                RESP="$(curl -sS \
                  -H "Origin: $ORIGIN" -H "Referer: $REFERER" \
                  -F "tanggal=$TANGGAL" \
                  -F "tanggal_pembanding=$TANGGAL_CMP" \
                  -F "kode_provinsi=$PCODE" \
                  -F "kode_kab_kota=$RCODE" \
                  'https://api-sp2kp.kemendag.go.id/report/api/average-price/generate-perbandingan-harga' || echo '{}')"

                echo "$RESP" | jq -c --arg pcode "$PCODE" --arg pname "$PNAME" --arg rcode "$RCODE" --arg rname "$RNAME" '
                  (.data // [])[] as $d
                  | {
                      level: "city",
                      province_code: $pcode,
                      province_name: $pname,
                      regency_code: $rcode,
                      regency_name: $rname,
                      tanggal: ($d.tanggal // ""),
                      harga: ($d.harga // 0),
                      tanggal_pembanding: ($d.tanggal_pembanding // ""),
                      harga_pembanding: ($d.harga_pembanding // 0),
                      delta_harga: ($d.delta_harga // ( ($d.harga // 0) - ($d.harga_pembanding // 0) )),
                      persen_perubahan: ($d.persen_perubahan // 0),
                      status_perubahan: ($d.status_perubahan // ""),
                      variant_id: $d.variant_id,
                      variant_nama: $d.variant_nama,
                      satuan_display: $d.satuan_display
                    }' >> tmp/all.jsonl
              fi

              # kecilkan tempo supaya sopan ke server
              sleep 0.4
            done
          done

          # Gabung & tulis CSV persis seperti di web (harga + pembanding + delta + persen)
          jq -s '.' tmp/all.jsonl > tmp/all.json

          jq -r '
            ["level","province_code","province_name","regency_code","regency_name",
             "tanggal","harga","tanggal_pembanding","harga_pembanding",
             "delta_harga","persen_perubahan","status_perubahan",
             "variant_id","variant_nama","satuan_display"],
            ( .[] | [
                .level,
                .province_code, .province_name, (.regency_code // ""), (.regency_name // ""),
                .tanggal, .harga, .tanggal_pembanding, .harga_pembanding,
                .delta_harga, .persen_perubahan, .status_perubahan,
                .variant_id, .variant_nama, .satuan_display
              ])
          ' tmp/all.json > "out/prices_${START_DATE}_to_${END_DATE}.csv"

      - name: Upload CSV
        uses: actions/upload-artifact@v4
        with:
          name: prices_${{ env.START_DATE }}_to_${{ env.END_DATE }}
          path: out/
